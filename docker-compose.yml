version: '3.8'

services:
  db:
    image: postgres:15
    container_name: circlematch-db
    environment:
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${PROD_DB_NAME}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DATABASE_USER}"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - circlematch-network

  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    image: circlematch-backend:latest
    container_name: circlematch-backend
    ports:
      - "8000:8000"
    environment:
      DATABASE_URL: ${DATABASE_URL}
      GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID}
      GOOGLE_CLIENT_SECRET: ${GOOGLE_CLIENT_SECRET}
    depends_on:
      - db
    networks:
      - circlematch-network
    restart: unless-stopped

  frontend:
    build: 
      context: ./frontend
      dockerfile: Dockerfile
    image: circlematch-frontend:latest
    container_name: circlematch-frontend
    ports:
      - "3000:3000"
    environment:
      VITE_API_URL: ${API_URL}
      VITE_GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID}
      VITE_DEBUG_AUTH: ${VITE_DEBUG_AUTH}
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    networks:
      - circlematch-network
    restart: unless-stopped

networks:
  circlematch-network:
    driver: bridge

volumes:
  postgres_data: